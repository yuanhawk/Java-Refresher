package ArrayMethod;

public class ArrayMethod {
	
	/* type[] arrayName = new type[length] - fixed size
	 * double[] prices = new double[4];
	 * double[] prices = {..., ..., ...}
	 * for (int i = 0; i < array.length(); i++}
	 * OR for (int i: array) {
	 * 		print(i);
	 * }
	 * 
	 * 2D Array
	 * double[0][0] = 0;
	 * 
	 * java.util.Arrays
	 * fill(array, value) - fills elements with specified value
	 * sort(array) - sort in ascending order
	 * binarySearch(array, value) - returns int index of specified value, returns -1 if not found, must use sort first
	 * copyOf(array, length) - creates the specified array, truncated/padded with default values, shallow copy
	 * equals(array1, array2) - if all elements in both arrays are equal
	 * 
	 * Use ArrayList
	 * ArrayList<String> Name = new ArrayList<String>(); adjustable arrays, similar to python list
	 * 
	 * Differences: Arrays - fixed, ArrayList - able to resize
	 * Arrays - stores primitive types (int/double), ArrayList - collections use wrapper classes to store primitive types
	 * Arrays - does not have call methods, ArrayList - uses set/get methods to access the values
	 * 
	 * Collections automatically add/remove wrapper class - autoboxing
	 * 
	 * Downsides to ArrayList: inserting an element into the middle of a list is inefficient as the elements after the insertion pt
	 * must be removed to accomodate the inserted element
	 */

}
