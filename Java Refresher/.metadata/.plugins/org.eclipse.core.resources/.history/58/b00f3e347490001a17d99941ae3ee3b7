package InterfaceMethod;

public class InterfaceMethod {
	
	/* starts off with interface keyword rather than a class keyword
	 * all methods in an interface are public & abstract
	 * implements - inherits fr the interface
	 * 
	 * Can define >= 1 public & abstract method(s), interface only specifies method signatures, not any code that implements the methods
	 * A class that implements and interface can use any constant defined by the interface.
	 * + Provide an implementation for each abstract method defined by the interface, if not it must be declared abstract
	 * 
	 * Abstract class vs interface
	 * Similarities:
	 * Define abstract & static constants
	 * Can't create an obj
	 * 
	 * Differences:
	 * Abstract: define & use other types of fields such as instance var, define regular methods, static methods
	 * Interfaces: can't
	 * 
	 * Interface: can define default methods, similar to regular methods in a class
	 * can define static methods
	 * 
	 * * A class can inherit multiple interface, but inherit one class *
	 * 
	 * If doing hierarchial inheritance, if just by using superclass, it may be insufficient in maintaining consistency of printing method,
	 * since add-on info needs to be specifically added separately. Interface ensure a consistent method can be used with the application
	 * 
	 * Abstract class
	 * *Var, static var*
	 * *Const*, static const
	 * Methods, static methods, abstract methods
	 * 
	 * Interface
	 * Static const
	 * Methods, static methods, abstract methods
	 */

}
